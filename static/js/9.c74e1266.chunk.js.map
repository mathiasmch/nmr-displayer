{"version":3,"sources":["component/highlight/index.js","demo/test/TestHighlight.jsx"],"names":["highlightContext","createContext","highlightReducer","state","action","type","newState","highlights","payload","value","highlighted","Object","keys","Error","emptyState","HighlightProvider","props","useReducer","highlight","dispatch","contextValue","useMemo","Provider","children","useHighlight","Array","isArray","convertedHighlights","newHighlights","push","String","context","useContext","isActive","some","key","includes","show","useCallback","hide","onHover","onMouseEnter","onMouseLeave","tableOne","id","tableTwo","mainDiv","css","tableDiv","table","th","td","TestHighlight","HighlightTable","data","map","datum","Tr","style","backgroundColor","join"],"mappings":"sOAQMA,EAAmBC,0BAEzB,SAASC,EAAiBC,EAAOC,GAC/B,OAAQA,EAAOC,MACb,IAAK,OACH,IADW,EACLC,EAAQ,eAAQH,EAAR,CAAeI,WAAW,eAAMJ,EAAMI,cADzC,cAESH,EAAOI,SAFhB,IAEX,2BAAoC,CAAC,IAA1BC,EAAyB,QAC9BA,KAASH,EAASC,WACpBD,EAASC,WAAWE,KAEpBH,EAASC,WAAWE,GAAS,GANtB,8BAUX,OADAH,EAASI,YAAcC,OAAOC,KAAKN,EAASC,YACrCD,EAET,IAAK,OACH,IADW,EACLA,EAAQ,eAAQH,EAAR,CAAeI,WAAW,eAAMJ,EAAMI,cADzC,cAESH,EAAOI,SAFhB,IAEX,2BAAoC,CAAC,IAA1BC,EAAyB,QAC9BA,KAASH,EAASC,aACpBD,EAASC,WAAWE,KACe,IAA/BH,EAASC,WAAWE,WACfH,EAASC,WAAWE,KANtB,8BAWX,OADAH,EAASI,YAAcC,OAAOC,KAAKN,EAASC,YACrCD,EAET,QACE,MAAM,IAAIO,MAAJ,+BAAkCT,EAAOC,QAKrD,IAAMS,EAAa,CACjBP,WAAY,GACZG,YAAa,IAGR,SAASK,EAAkBC,GAAQ,IAAD,EACTC,qBAAWf,EAAkBY,GADpB,mBAChCI,EADgC,KACrBC,EADqB,KAEjCC,EAAeC,mBAAQ,iBAAO,CAAEH,YAAWC,cAAa,CAACD,IAC/D,OACE,kBAAClB,EAAiBsB,SAAlB,CAA2Bb,MAAOW,GAC/BJ,EAAMO,UAKN,SAASC,EAAajB,GAC3B,IAAKkB,MAAMC,QAAQnB,GACjB,MAAM,IAAIM,MAAM,+BAGlB,IAAMc,EAAsBN,mBAAQ,WAClC,IADwC,EAClCO,EAAgB,GADkB,cAEhBrB,GAFgB,IAExC,2BAAoC,CAAC,IAA1BW,EAAyB,QAClC,GAAyB,kBAAdA,GAA+C,kBAAdA,EAC1C,MAAM,IAAIL,MAAJ,4CAEU,KAAdK,GACFU,EAAcC,KAAKC,OAAOZ,KAPU,8BAUxC,OAAOU,IACN,CAACrB,IAEEwB,EAAUC,qBAAWhC,GAErBiC,EAAWZ,mBAAQ,WACvB,OAAOU,EAAQb,UAAUR,YAAYwB,MAAK,SAACC,GAAD,OACxCR,EAAoBS,SAASD,QAE9B,CAACJ,EAAQb,UAAUR,YAAaiB,IAE7BU,EAAOC,uBAAY,WACvBP,EAAQZ,SAAS,CAAEd,KAAM,OAAQG,QAASmB,MACzC,CAACI,EAASJ,IAEPY,EAAOD,uBAAY,WACvBP,EAAQZ,SAAS,CAAEd,KAAM,OAAQG,QAASmB,MACzC,CAACI,EAASJ,IAOb,MAAO,CAAEM,WAAUI,OAAME,OAAMC,QALf,CACdC,aAAcJ,EACdK,aAAcH,M,omBCxFlB,IAAMI,EAAW,CACf,CAAEC,GAAI,IAAK1B,UAAW,CAAC,EAAG,IAC1B,CAAE0B,GAAI,IAAK1B,UAAW,CAAC,IACvB,CAAE0B,GAAI,IAAK1B,UAAW,IACtB,CAAE0B,GAAI,IAAK1B,UAAW,CAAC,EAAG,IAC1B,CAAE0B,GAAI,IAAK1B,UAAW,CAAC,EAAG,EAAG,IAC7B,CAAE0B,GAAI,IAAK1B,UAAW,CAAC,EAAG,KAGtB2B,EAAW,CACf,CAAED,GAAI,IAAK1B,UAAW,CAAC,MACvB,CAAE0B,GAAI,IAAK1B,UAAW,CAAC,MACvB,CAAE0B,GAAI,IAAK1B,UAAW,CAAC,IAAK,MAC5B,CAAE0B,GAAI,IAAK1B,UAAW,CAAC,IAAK,IAAK,MACjC,CAAE0B,GAAI,IAAK1B,UAAW,KAGlB4B,EAAUC,YAAH,KAKPC,EAAWD,YAAH,KAIRE,EAAQF,YAAH,KAILG,EAAKH,YAAH,KAKFI,EAAKJ,YAAH,KAIO,SAASK,IACtB,OACE,YAAC,IAAD,KACE,mBAAKL,IAAKD,GACR,mBAAKC,IAAKC,GACR,YAACK,EAAD,CAAgBC,KAAMX,KAExB,mBAAKI,IAAKC,GACR,YAACK,EAAD,CAAgBC,KAAMT,OAOhC,SAASQ,EAAerC,GACtB,OACE,qBAAO+B,IAAKE,GACV,yBACE,sBACE,kBAAIF,IAAKG,GAAT,MACA,kBAAIH,IAAKG,GAAT,mBAGJ,yBACGlC,EAAMsC,KAAKC,KAAI,SAACC,GAAD,OACd,YAACC,EAAD,CAAItB,IAAKqB,EAAMZ,GAAInC,MAAO+C,SAOpC,SAASC,EAAGzC,GAAQ,IACVP,EAAUO,EAAVP,MAEFS,EAAYM,YAAa,CAACf,EAAMmC,IAAR,mBAAenC,EAAMS,aAEnD,OACE,gCACEiB,IAAK1B,EAAMmC,GACXc,MAAO,CACLC,gBAAiBzC,EAAUe,SAAW,MAAQ,gBAE5Cf,EAAUsB,SAEd,kBAAIO,IAAKI,GAAK1C,EAAMmC,IACpB,kBAAIG,IAAKI,GAAK1C,EAAMS,UAAU0C,KAAK","file":"static/js/9.c74e1266.chunk.js","sourcesContent":["import React, {\n  createContext,\n  useReducer,\n  useMemo,\n  useContext,\n  useCallback,\n} from 'react';\n\nconst highlightContext = createContext();\n\nfunction highlightReducer(state, action) {\n  switch (action.type) {\n    case 'SHOW': {\n      const newState = { ...state, highlights: { ...state.highlights } };\n      for (const value of action.payload) {\n        if (value in newState.highlights) {\n          newState.highlights[value]++;\n        } else {\n          newState.highlights[value] = 1;\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n      return newState;\n    }\n    case 'HIDE': {\n      const newState = { ...state, highlights: { ...state.highlights } };\n      for (const value of action.payload) {\n        if (value in newState.highlights) {\n          newState.highlights[value]--;\n          if (newState.highlights[value] === 0) {\n            delete newState.highlights[value];\n          }\n        }\n      }\n      newState.highlighted = Object.keys(newState.highlights);\n      return newState;\n    }\n    default: {\n      throw new Error(`unknown action type: ${action.type}`);\n    }\n  }\n}\n\nconst emptyState = {\n  highlights: {},\n  highlighted: [],\n};\n\nexport function HighlightProvider(props) {\n  const [highlight, dispatch] = useReducer(highlightReducer, emptyState);\n  const contextValue = useMemo(() => ({ highlight, dispatch }), [highlight]);\n  return (\n    <highlightContext.Provider value={contextValue}>\n      {props.children}\n    </highlightContext.Provider>\n  );\n}\n\nexport function useHighlight(highlights) {\n  if (!Array.isArray(highlights)) {\n    throw new Error('highlights must be an array');\n  }\n\n  const convertedHighlights = useMemo(() => {\n    const newHighlights = [];\n    for (const highlight of highlights) {\n      if (typeof highlight !== 'string' && typeof highlight !== 'number') {\n        throw new Error(`highlight key must be a string or number`);\n      }\n      if (highlight !== '') {\n        newHighlights.push(String(highlight));\n      }\n    }\n    return newHighlights;\n  }, [highlights]);\n\n  const context = useContext(highlightContext);\n\n  const isActive = useMemo(() => {\n    return context.highlight.highlighted.some((key) =>\n      convertedHighlights.includes(key),\n    );\n  }, [context.highlight.highlighted, convertedHighlights]);\n\n  const show = useCallback(() => {\n    context.dispatch({ type: 'SHOW', payload: convertedHighlights });\n  }, [context, convertedHighlights]);\n\n  const hide = useCallback(() => {\n    context.dispatch({ type: 'HIDE', payload: convertedHighlights });\n  }, [context, convertedHighlights]);\n\n  const onHover = {\n    onMouseEnter: show,\n    onMouseLeave: hide,\n  };\n\n  return { isActive, show, hide, onHover };\n}\n","/** @jsx jsx */\n\nimport { css, jsx } from '@emotion/core';\n\nimport { HighlightProvider, useHighlight } from '../../component/highlight';\n\nconst tableOne = [\n  { id: 'A', highlight: [1, 2] },\n  { id: 'B', highlight: [0] },\n  { id: 'C', highlight: [] },\n  { id: 'D', highlight: [3, 4] },\n  { id: 'E', highlight: [1, 2, 3] },\n  { id: 'F', highlight: [2, 4] },\n];\n\nconst tableTwo = [\n  { id: '1', highlight: ['F'] },\n  { id: '2', highlight: ['E'] },\n  { id: '3', highlight: ['A', 'B'] },\n  { id: '4', highlight: ['B', 'C', 'F'] },\n  { id: '5', highlight: [] },\n];\n\nconst mainDiv = css`\n  display: flex;\n  padding: 20px;\n`;\n\nconst tableDiv = css`\n  padding: 20px;\n`;\n\nconst table = css`\n  border: 1px solid black;\n`;\n\nconst th = css`\n  padding: 5px;\n  font-weight: 600;\n`;\n\nconst td = css`\n  padding: 5px;\n`;\n\nexport default function TestHighlight() {\n  return (\n    <HighlightProvider>\n      <div css={mainDiv}>\n        <div css={tableDiv}>\n          <HighlightTable data={tableOne} />\n        </div>\n        <div css={tableDiv}>\n          <HighlightTable data={tableTwo} />\n        </div>\n      </div>\n    </HighlightProvider>\n  );\n}\n\nfunction HighlightTable(props) {\n  return (\n    <table css={table}>\n      <thead>\n        <tr>\n          <th css={th}>ID</th>\n          <th css={th}>Highlight ids</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.data.map((datum) => (\n          <Tr key={datum.id} value={datum} />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nfunction Tr(props) {\n  const { value } = props;\n\n  const highlight = useHighlight([value.id, ...value.highlight]);\n\n  return (\n    <tr\n      key={value.id}\n      style={{\n        backgroundColor: highlight.isActive ? 'red' : 'transparent',\n      }}\n      {...highlight.onHover}\n    >\n      <td css={td}>{value.id}</td>\n      <td css={td}>{value.highlight.join(', ')}</td>\n    </tr>\n  );\n}\n"],"sourceRoot":""}